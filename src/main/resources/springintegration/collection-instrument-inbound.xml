<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
       xsi:schemaLocation="http://www.springframework.org/schema/integration/amqp http://www.springframework.org/schema/integration/amqp/spring-integration-amqp.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- JSON input channel bound to incoming AMQP message -->
    <int:channel id="ciJson" />
    <!-- Channel containing Java object parsed from incoming JSON -->
    <int:channel id="ciMessageDto" />
    <!-- Error channel - will contain raw exceptions -->
    <int:channel id="ciErrorChannel" />
    <!-- ExceptionCleaner takes messages from ciErrorChannel, removes stacktrace for brevity then puts the output
         on ciErrorCleanChannel -->
    <int:channel id="ciErrorCleanChannel" />

    <!-- Channel containing JSON representations of exception minus stack trace, bound to outgoing AMQP message to DLQ -->
    <int:channel id="ciErrorChannelJson">
        <!-- Log the errors as well as dumping the on the DLQ -->
        <int:interceptors> <int:wire-tap channel="logger"/> </int:interceptors>
    </int:channel>

    <bean id="simpleMessageConverter"
          class="org.springframework.amqp.support.converter.SimpleMessageConverter" />

    <int-amqp:inbound-channel-adapter channel="ciJson"
                                      queue-names="collex.seft.instruments" connection-factory="connectionFactory"
                                      message-converter="simpleMessageConverter" error-channel="ciErrorChannel"/>

    <int:logging-channel-adapter id="logger" level="ERROR"/>

    <int-amqp:outbound-channel-adapter channel="ciErrorChannelJson"
                                       exchange-name="Seft.Instruments.DLQ"/>

    <int:json-to-object-transformer input-channel="ciJson" output-channel="ciMessageDto"
                     type="uk.gov.ons.ctp.response.collection.exercise.message.dto.CollectionInstrumentMessageDTO"/>

    <int:object-to-json-transformer input-channel="ciErrorCleanChannel"
                                    output-channel="ciErrorChannelJson"/>

    <rabbit:queue name="collex.seft.instruments"/>

    <rabbit:fanout-exchange name="Seft.Instruments">
        <rabbit:bindings>
            <rabbit:binding queue="collex.seft.instruments"/>
        </rabbit:bindings>
    </rabbit:fanout-exchange>

    <rabbit:fanout-exchange name="Seft.Instruments.DLQ"/>

</beans>