name: Build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REF: ${{ github.ref }}
  IMAGE: action
  REGISTRY_HOSTNAME: eu.gcr.io
  HOST: ${{ secrets.GOOGLE_PROJECT_ID }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build & package"
  build:
    name: Build & Package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Run Tests
        run: mvn clean verify
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '270.0.0'
          service_account_key: ${{ secrets.GCR_KEY }}
        # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |
          gcloud auth configure-docker
        # Build the Docker image
      - name: Build Docker Image
        run: |
          docker build -f _infra/docker/Dockerfile -t "$REGISTRY_HOSTNAME"/"$HOST"/"$IMAGE":latest .
      - name: Publish Docker Image
        if: github.ref == 'refs/heads/master'
        run: |
          docker push "$REGISTRY_HOSTNAME"/"$HOST"/"$IMAGE":latest
      - name: package helm
        run: |
          helm dep up _infra/helm/collection-exercise
          helm package _infra/helm/collection-exercise
      - name: Publish Charts
        if: github.ref == 'refs/heads/master'
        run: |
          gsutil cp collection-exercise-*.tgz gs://ras-rm-artifacts/act/
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: failure()